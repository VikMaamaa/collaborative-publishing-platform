version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: collaborative-postgres
    environment:
      POSTGRES_DB: collaborative_publishing
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - collaborative-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for BullMQ
  redis:
    image: redis:7-alpine
    container_name: collaborative-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - collaborative-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: collaborative-backend
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=collaborative_publishing
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - JWT_EXPIRES_IN=7d
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - collaborative-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend (Next.js) - Optional, can be run locally
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: collaborative-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - collaborative-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:

networks:
  collaborative-network:
    driver: bridge 